@page "/employees"
@rendermode InteractiveServer
@using Core.Extensions
@using HumanResources.Abstractions
@using HumanResources.Entities
@using HumanResources.Queries
@using MediatR
@inject NavigationManager NavigationManager
@inject IHumanResourceFactory HumanResourceFactory
@inject ISender Sender

<PageTitle>Employees</PageTitle>
@* *@
@* <CityInput @bind-Value="_city" Validator="(inputs, _) => Guard.ThrowWhenNullOrWhiteSpace(inputs)"/> *@

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>City</th>
            <th>Department</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in _employees)
        {
            <tr data-id="@employee.Id.Id" @onclick="e => ToDetail(employee.Id)">
                <td>@employee.Person.Name.Format(CombinedNameFormatter.Instance)</td>
                <td>@employee.Person.ContactInformation.Address.City.Value</td>
                <td>@employee.Contract.Department.Name.Value</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private IList<Employee> _employees = new List<Employee>();
    
    private void ToDetail(EmployeeId e)
    {
        NavigationManager.NavigateTo($"/employees/{e.Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        var query = await Sender.Send(new EmployeeTableQuery(0, 50));
        _employees = query.Employees;
    }

}