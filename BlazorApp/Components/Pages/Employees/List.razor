@page "/employees"
@rendermode InteractiveServer
@using Core.ValueObjects
@using HumanResources.Abstractions
@using HumanResources.Commands
@using HumanResources.Entities
@using HumanResources.Queries
@using MediatR
@using BlazorApp.Components.inputs
@using Core
@inject IHumanResourceFactory HumanResourceFactory
@inject ISender Mediator

<PageTitle>Employees</PageTitle>

<CityInput @bind-Value="_city" Validator="(inputs, _) => Guard.ThrowWhenNullOrWhiteSpace(inputs)" />

<button class="btn btn-primary" @onclick="AddRandomEmployee">Add random Employee</button>

<button class="btn btn-primary" @onclick="GetEmployee">Get random Employee</button>

@code {
    private City _city;

    private Task AddRandomEmployee()
    {
        var primitiveValues = new EmployeePrimitiveValues
        {
            FirstName = "John",
            LastName = "Doe",
            BirthDate = new DateTime(1980, 1, 1),
            Street = "123 Main St",
            City = "New York",
            State = "NY",
            ZipCode = "10001",
            Email = "john.doe@example.com",
            Title = "Software Developer",
            Type = "Regular",
            PhoneNumber = "123 456 790",
            PersonalIdentificationNumber = "123454",
            ContractType = "Temporary",
            ContractStartDate = DateTime.Now,
            ContractEndDate = DateTime.Now.AddYears(1)
        };

        return Mediator.Send(new CreateEmployeeRequest(primitiveValues));
    }

    private async Task GetEmployee()
    {
        var response = await Mediator.Send(new DetailEmployeeQuery(new EmployeeId("0242922A-75D3-4443-905B-77FDDAB71B93")));

        var i = 0;
    }

}