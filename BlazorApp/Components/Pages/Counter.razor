@page "/counter"
@using HumanResources.Abstractions
@using HumanResources.Commands
@using HumanResources.Entities
@using HumanResources.Queries
@using MediatR
@rendermode InteractiveServer
@inject IHumanResourceFactory HumanResourceFactory
@inject ISender Mediator

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @_currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<button class="btn btn-primary" @onclick="AddRandomEmployee">Add random Employee</button>

<button class="btn btn-primary" @onclick="GetEmployee">Get random Employee</button>

@code {
    private int _currentCount = 0;

    private void IncrementCount()
    {
        _currentCount++;
    }

    private Task AddRandomEmployee()
    {
        var primitiveValues = new EmployeePrimitiveValues
        {
            FirstName = "John",
            LastName = "Doe",
            BirthDate = new DateTime(1980, 1, 1),
            Street = "123 Main St",
            City = "New York",
            State = "NY",
            ZipCode = "10001",
            Email = "john.doe@example.com",
            Title = "Software Developer",
            Type = "Regular",
            PhoneNumber = "123 456 790",
            PersonalIdentificationNumber = "123454",
        };

        return Mediator.Send(new EmployeeCreateRequest(primitiveValues));
    }

    private async Task GetEmployee()
    {
        var response = await Mediator.Send(new EmployeeDetailQuery(new EmployeeId("31049C86-CEB9-4D00-AC4D-01E5FD2C92AC")));

        var i = 0;
    }

}